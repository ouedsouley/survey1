{"ast":null,"code":"import _asyncToGenerator from \"D:/ionic/survey-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nlet PhotoService = class PhotoService {\n  constructor(camera) {\n    this.camera = camera;\n    this.photos = [];\n  }\n  addNewToGallery() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Take a photo\n      const capturedPhoto = yield Camera.getPhoto({\n        resultType: CameraResultType.Uri,\n        source: CameraSource.Camera,\n        quality: 100 // highest quality (0 to 100)\n      });\n      // Save the picture and add it to photo collection\n      const savedImageFile = yield _this.savePicture(capturedPhoto);\n      //this.photos.unshift(savedImageFile);\n    })();\n  }\n\n  savePicture(photo) {\n    return _asyncToGenerator(function* () {})();\n  }\n};\nPhotoService = __decorate([Injectable({\n  providedIn: 'root'\n})], PhotoService);\nexport { PhotoService };","map":{"version":3,"names":["Injectable","Camera","CameraResultType","CameraSource","PhotoService","constructor","camera","photos","addNewToGallery","_this","_asyncToGenerator","capturedPhoto","getPhoto","resultType","Uri","source","quality","savedImageFile","savePicture","photo","__decorate","providedIn"],"sources":["D:\\ionic\\survey-app\\src\\app\\services\\photo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, Photo } from '@capacitor/camera';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\n\nimport { UserPhoto } from '../models/userphoto';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PhotoService {\n  [x: string]: any;\n  public photos: Photo[] = [];\n  constructor(private camera: Photo) { }\n\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, // file-based data; provides best performance\n      source: CameraSource.Camera, // automatically take a new photo with the camera\n      quality: 100 // highest quality (0 to 100)\n    });\n  \n    // Save the picture and add it to photo collection\n    const savedImageFile = await this.savePicture(capturedPhoto);\n    //this.photos.unshift(savedImageFile);\n  }\n  private async savePicture(photo: Photo) {\n\n  }\n\n  \n}\n\n\n\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,MAAM,EAAEC,gBAAgB,EAAEC,YAAY,QAAe,mBAAmB;AASjF,IAAaC,YAAY,GAAzB,MAAaA,YAAY;EAGvBC,YAAoBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;IADnB,KAAAC,MAAM,GAAY,EAAE;EACU;EAExBC,eAAeA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B;MACA,MAAMC,aAAa,SAASV,MAAM,CAACW,QAAQ,CAAC;QAC1CC,UAAU,EAAEX,gBAAgB,CAACY,GAAG;QAChCC,MAAM,EAAEZ,YAAY,CAACF,MAAM;QAC3Be,OAAO,EAAE,GAAG,CAAC;OACd,CAAC;MAEF;MACA,MAAMC,cAAc,SAASR,KAAI,CAACS,WAAW,CAACP,aAAa,CAAC;MAC5D;IAAA;EACF;;EACcO,WAAWA,CAACC,KAAY;IAAA,OAAAT,iBAAA;EAEtC;CAGD;AAtBYN,YAAY,GAAAgB,UAAA,EAJxBpB,UAAU,CAAC;EACVqB,UAAU,EAAE;CACb,CAAC,C,EAEWjB,YAAY,CAsBxB;SAtBYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}