{"ast":null,"code":"import _asyncToGenerator from \"D:/ionic/survey-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport * as i0 from \"@angular/core\";\nclass PhotoService {\n  constructor() {\n    this.photos = [];\n  }\n  addNewToGallery() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Take a photo\n      const capturedPhoto = yield Camera.getPhoto({\n        resultType: CameraResultType.Uri,\n        source: CameraSource.Camera,\n        quality: 100\n      });\n      const savedImageFile = yield _this.savePicture(capturedPhoto);\n      _this.photos.unshift(savedImageFile);\n      _this.photos.unshift({\n        filepath: \"soon...\",\n        webviewPath: capturedPhoto.webPath\n      });\n    })();\n  }\n}\nPhotoService.ɵfac = function PhotoService_Factory(t) {\n  return new (t || PhotoService)();\n};\nPhotoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PhotoService,\n  factory: PhotoService.ɵfac,\n  providedIn: 'root'\n});\nexport { PhotoService };","map":{"version":3,"names":["Camera","CameraResultType","CameraSource","PhotoService","constructor","photos","addNewToGallery","_this","_asyncToGenerator","capturedPhoto","getPhoto","resultType","Uri","source","quality","savedImageFile","savePicture","unshift","filepath","webviewPath","webPath","factory","ɵfac","providedIn"],"sources":["D:\\ionic\\survey-app\\src\\app\\services\\photo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, Photo} from '@capacitor/camera';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\nimport { PicturePage } from '../pages/picture/picture.page';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PhotoService {\n  public photos: UserPhoto[] = [];\n  savePicture: any;\n\n  constructor() { }\n\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const savedImageFile = await this.savePicture(capturedPhoto);\n    this.photos.unshift(savedImageFile);\n\n    this.photos.unshift({\n      filepath: \"soon...\",\n      webviewPath: capturedPhoto.webPath!\n    });\n    \n  }\n  \n  \n \n}\n\n\nexport interface UserPhoto {\n  filepath: string;\n  webviewPath?: string;\n}\n\n\n\n"],"mappings":";AACA,SAASA,MAAM,EAAEC,gBAAgB,EAAEC,YAAY,QAAc,mBAAmB;;AAQhF,MAIaC,YAAY;EAIvBC,YAAA;IAHO,KAAAC,MAAM,GAAgB,EAAE;EAGf;EAEHC,eAAeA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B;MACA,MAAMC,aAAa,SAAST,MAAM,CAACU,QAAQ,CAAC;QAC1CC,UAAU,EAAEV,gBAAgB,CAACW,GAAG;QAChCC,MAAM,EAAEX,YAAY,CAACF,MAAM;QAC3Bc,OAAO,EAAE;OACV,CAAC;MACF,MAAMC,cAAc,SAASR,KAAI,CAACS,WAAW,CAACP,aAAa,CAAC;MAC5DF,KAAI,CAACF,MAAM,CAACY,OAAO,CAACF,cAAc,CAAC;MAEnCR,KAAI,CAACF,MAAM,CAACY,OAAO,CAAC;QAClBC,QAAQ,EAAE,SAAS;QACnBC,WAAW,EAAEV,aAAa,CAACW;OAC5B,CAAC;IAAC;EAEL;;AArBWjB,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;EAAAC,UAAA,EAHX;AAAM;SAGPpB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}