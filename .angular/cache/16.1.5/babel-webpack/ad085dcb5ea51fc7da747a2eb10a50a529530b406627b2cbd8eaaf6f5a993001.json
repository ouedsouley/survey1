{"ast":null,"code":"import _asyncToGenerator from \"D:/ionic/survey-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport * as i0 from \"@angular/core\";\nclass PhotoService {\n  constructor() {\n    this.photos = [];\n  }\n  addNewToGallery() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Take a photo\n      const capturedPhoto = yield Camera.getPhoto({\n        resultType: CameraResultType.Uri,\n        source: CameraSource.Camera,\n        quality: 100 // highest quality (0 to 100)\n      });\n      // Save the picture and add it to photo collection\n      const savedImageFile = yield _this.savePicture(capturedPhoto);\n      //this.photos.unshift(savedImageFile);\n    })();\n  }\n\n  savePicture(photo) {\n    return _asyncToGenerator(function* () {})();\n  }\n}\nPhotoService.ɵfac = function PhotoService_Factory(t) {\n  return new (t || PhotoService)();\n};\nPhotoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PhotoService,\n  factory: PhotoService.ɵfac,\n  providedIn: 'root'\n});\nexport { PhotoService };","map":{"version":3,"names":["Camera","CameraResultType","CameraSource","PhotoService","constructor","photos","addNewToGallery","_this","_asyncToGenerator","capturedPhoto","getPhoto","resultType","Uri","source","quality","savedImageFile","savePicture","photo","factory","ɵfac","providedIn"],"sources":["D:\\ionic\\survey-app\\src\\app\\services\\photo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, Photo } from '@capacitor/camera';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\n\nimport { UserPhoto } from '../models/userphoto';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PhotoService {\n  [x: string]: any;\n  public photos: Photo[] = [];\n  constructor() { }\n\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, // file-based data; provides best performance\n      source: CameraSource.Camera, // automatically take a new photo with the camera\n      quality: 100 // highest quality (0 to 100)\n    });\n  \n    // Save the picture and add it to photo collection\n    const savedImageFile = await this.savePicture(capturedPhoto);\n    //this.photos.unshift(savedImageFile);\n  }\n  private async savePicture(photo: Photo) {\n\n  }\n\n  \n}\n\n\n\n"],"mappings":";AACA,SAASA,MAAM,EAAEC,gBAAgB,EAAEC,YAAY,QAAe,mBAAmB;;AAKjF,MAIaC,YAAY;EAGvBC,YAAA;IADO,KAAAC,MAAM,GAAY,EAAE;EACX;EAEHC,eAAeA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B;MACA,MAAMC,aAAa,SAAST,MAAM,CAACU,QAAQ,CAAC;QAC1CC,UAAU,EAAEV,gBAAgB,CAACW,GAAG;QAChCC,MAAM,EAAEX,YAAY,CAACF,MAAM;QAC3Bc,OAAO,EAAE,GAAG,CAAC;OACd,CAAC;MAEF;MACA,MAAMC,cAAc,SAASR,KAAI,CAACS,WAAW,CAACP,aAAa,CAAC;MAC5D;IAAA;EACF;;EACcO,WAAWA,CAACC,KAAY;IAAA,OAAAT,iBAAA;EAEtC;;AAnBWL,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;EAAAC,UAAA,EAHX;AAAM;SAGPjB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}