{"ast":null,"code":"import _asyncToGenerator from \"D:/ionic/survey-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport { Directory, Filesystem } from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nclass PhotoService {\n  constructor(platform) {\n    this.photos = [];\n    this.PHOTO_STORAGE = 'photos';\n    this.platform = platform;\n  }\n  addNewToGallery() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Take a photo\n      const capturedPhoto = yield Camera.getPhoto({\n        resultType: CameraResultType.Uri,\n        source: CameraSource.Camera,\n        quality: 100\n      });\n      _this.photos.unshift({\n        filepath: \"soon...\",\n        webviewPath: capturedPhoto.webPath\n      });\n      const savedImageFile = yield _this.savePicture(capturedPhoto);\n      _this.photos.unshift(savedImageFile);\n      Preferences.set({\n        key: _this.PHOTO_STORAGE,\n        value: JSON.stringify(_this.photos)\n      });\n    })();\n  }\n  loadSaved() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Retrieve cached photo array data\n      const {\n        value\n      } = yield Preferences.get({\n        key: _this2.PHOTO_STORAGE\n      });\n      _this2.photos = value ? JSON.parse(value) : [];\n      if (!_this2.platform.is('hybrid')) {\n        for (let photo of _this2.photos) {\n          // Read each saved photo's data from the Filesystem\n          const readFile = yield Filesystem.readFile({\n            path: photo.filepath,\n            directory: Directory.Data\n          });\n          // Web platform only: Load the photo as base64 data\n          photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\n        }\n      }\n    })();\n  }\n}\nPhotoService.ɵfac = function PhotoService_Factory(t) {\n  return new (t || PhotoService)(i0.ɵɵinject(i1.Platform));\n};\nPhotoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PhotoService,\n  factory: PhotoService.ɵfac,\n  providedIn: 'root'\n});\nexport { PhotoService };","map":{"version":3,"names":["Camera","CameraResultType","CameraSource","Directory","Filesystem","Preferences","PhotoService","constructor","platform","photos","PHOTO_STORAGE","addNewToGallery","_this","_asyncToGenerator","capturedPhoto","getPhoto","resultType","Uri","source","quality","unshift","filepath","webviewPath","webPath","savedImageFile","savePicture","set","key","value","JSON","stringify","loadSaved","_this2","get","parse","is","photo","readFile","path","directory","Data","data","i0","ɵɵinject","i1","Platform","factory","ɵfac","providedIn"],"sources":["D:\\ionic\\survey-app\\src\\app\\services\\photo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, Photo} from '@capacitor/camera';\nimport { Directory, Filesystem } from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\nimport { Platform } from '@ionic/angular';\n\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PhotoService {\n  public photos: UserPhoto[] = [];\n  private PHOTO_STORAGE: string = 'photos';\n  private platform: Platform;\n  savePicture: any;\n\n  constructor(platform: Platform) { \n    this.platform = platform;\n  }\n\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    \n\n    this.photos.unshift({\n      filepath: \"soon...\",\n      webviewPath: capturedPhoto.webPath!\n    });\n    const savedImageFile = await this.savePicture(capturedPhoto);\n    this.photos.unshift(savedImageFile);\n\n    Preferences.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos),\n    });\n    \n  }\n  public async loadSaved() {\n    // Retrieve cached photo array data\n    const { value } = await Preferences.get({ key: this.PHOTO_STORAGE });\n    this.photos = (value ? JSON.parse(value) : []) as UserPhoto[];\n    if (!this.platform.is('hybrid')) {\n      for (let photo of this.photos) {\n        // Read each saved photo's data from the Filesystem\n        const readFile = await Filesystem.readFile({\n          path: photo.filepath,\n          directory: Directory.Data,\n        });\n      \n        // Web platform only: Load the photo as base64 data\n        photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\n      }\n    }\n  \n    \n  }\n  \n  \n \n}\n\n\nexport interface UserPhoto {\n  filepath: string;\n  webviewPath?: string;\n}\n\n\n\n"],"mappings":";AACA,SAASA,MAAM,EAAEC,gBAAgB,EAAEC,YAAY,QAAc,mBAAmB;AAChF,SAASC,SAAS,EAAEC,UAAU,QAAQ,uBAAuB;AAC7D,SAASC,WAAW,QAAQ,wBAAwB;;;AAQpD,MAIaC,YAAY;EAMvBC,YAAYC,QAAkB;IALvB,KAAAC,MAAM,GAAgB,EAAE;IACvB,KAAAC,aAAa,GAAW,QAAQ;IAKtC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;EAC1B;EAEaG,eAAeA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B;MACA,MAAMC,aAAa,SAASd,MAAM,CAACe,QAAQ,CAAC;QAC1CC,UAAU,EAAEf,gBAAgB,CAACgB,GAAG;QAChCC,MAAM,EAAEhB,YAAY,CAACF,MAAM;QAC3BmB,OAAO,EAAE;OACV,CAAC;MAGFP,KAAI,CAACH,MAAM,CAACW,OAAO,CAAC;QAClBC,QAAQ,EAAE,SAAS;QACnBC,WAAW,EAAER,aAAa,CAACS;OAC5B,CAAC;MACF,MAAMC,cAAc,SAASZ,KAAI,CAACa,WAAW,CAACX,aAAa,CAAC;MAC5DF,KAAI,CAACH,MAAM,CAACW,OAAO,CAACI,cAAc,CAAC;MAEnCnB,WAAW,CAACqB,GAAG,CAAC;QACdC,GAAG,EAAEf,KAAI,CAACF,aAAa;QACvBkB,KAAK,EAAEC,IAAI,CAACC,SAAS,CAAClB,KAAI,CAACH,MAAM;OAClC,CAAC;IAAC;EAEL;EACasB,SAASA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAnB,iBAAA;MACpB;MACA,MAAM;QAAEe;MAAK,CAAE,SAASvB,WAAW,CAAC4B,GAAG,CAAC;QAAEN,GAAG,EAAEK,MAAI,CAACtB;MAAa,CAAE,CAAC;MACpEsB,MAAI,CAACvB,MAAM,GAAImB,KAAK,GAAGC,IAAI,CAACK,KAAK,CAACN,KAAK,CAAC,GAAG,EAAkB;MAC7D,IAAI,CAACI,MAAI,CAACxB,QAAQ,CAAC2B,EAAE,CAAC,QAAQ,CAAC,EAAE;QAC/B,KAAK,IAAIC,KAAK,IAAIJ,MAAI,CAACvB,MAAM,EAAE;UAC7B;UACA,MAAM4B,QAAQ,SAASjC,UAAU,CAACiC,QAAQ,CAAC;YACzCC,IAAI,EAAEF,KAAK,CAACf,QAAQ;YACpBkB,SAAS,EAAEpC,SAAS,CAACqC;WACtB,CAAC;UAEF;UACAJ,KAAK,CAACd,WAAW,GAAG,0BAA0Be,QAAQ,CAACI,IAAI,EAAE;;;IAEhE;EAGH;;AAlDWnC,YAAY,C;mBAAZA,YAAY,EAAAoC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,QAAA;AAAA;AAAZvC,YAAY,C;SAAZA,YAAY;EAAAwC,OAAA,EAAZxC,YAAY,CAAAyC,IAAA;EAAAC,UAAA,EAHX;AAAM;SAGP1C,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}