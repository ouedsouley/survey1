{"ast":null,"code":"import _asyncToGenerator from \"D:/ionic/survey-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Capacitor } from '@capacitor/core';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/photo.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nfunction PicturePage_ion_col_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 8);\n    i0.ɵɵelement(1, \"ion-img\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const photo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", photo_r1.webviewPath);\n  }\n}\nlet PicturePage = /*#__PURE__*/(() => {\n  class PicturePage {\n    constructor(photoService) {\n      this.photoService = photoService;\n      this.photo = undefined;\n      this.convertBlobToBase64 = blob => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.readAsDataURL(blob);\n      });\n    }\n    addPhotoToGallery() {\n      this.photoService.addNewToGallery();\n    }\n    savePicture(photo) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const base64Data = yield _this.readAsBase64(photo);\n        const fileName = Date.now() + '.jpeg';\n        const savedFile = yield Filesystem.writeFile({\n          path: fileName,\n          data: base64Data,\n          directory: Directory.Data\n        });\n        if (_this.platform.is('hybrid')) {\n          return {\n            filepath: savedFile.uri,\n            webviewPath: Capacitor.convertFileSrc(savedFile.uri)\n          };\n        } else {\n          return {\n            filepath: fileName,\n            webviewPath: photo.webPath\n          };\n        }\n      })();\n    }\n    readAsBase64(photo) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (_this2.platform.is('hybrid')) {\n          // Read the file into base64 format\n          const file = yield Filesystem.readFile({\n            path: photo.path\n          });\n          return file.data;\n        } else {\n          const response = yield fetch(photo.webPath);\n          const blob = yield response.blob();\n          return yield _this2.convertBlobToBase64(blob);\n        }\n      })();\n    }\n    ngOnInit() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        yield _this3.photoService.loadSaved();\n      })();\n    }\n  }\n  PicturePage.ɵfac = function PicturePage_Factory(t) {\n    return new (t || PicturePage)(i0.ɵɵdirectiveInject(i1.PhotoService));\n  };\n  PicturePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PicturePage,\n    selectors: [[\"app-picture\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [3, \"fullscreen\"], [1, \"ion-padding\"], [\"vertical\", \"bottom\", \"horizontal\", \"center\", \"slot\", \"fixed\"], [3, \"click\"], [\"name\", \"camera\"], [\"size\", \"6\", 4, \"ngFor\", \"ngForOf\"], [\"size\", \"6\"], [3, \"src\"]],\n    template: function PicturePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-menu-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Take a picture\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 2)(7, \"div\", 3)(8, \"ion-fab\", 4)(9, \"ion-fab-button\", 5);\n        i0.ɵɵlistener(\"click\", function PicturePage_Template_ion_fab_button_click_9_listener() {\n          return ctx.addPhotoToGallery();\n        });\n        i0.ɵɵelement(10, \"ion-icon\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"ion-grid\")(12, \"ion-row\");\n        i0.ɵɵtemplate(13, PicturePage_ion_col_13_Template, 2, 1, \"ion-col\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.photoService.photos);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.IonButtons, i3.IonCol, i3.IonContent, i3.IonFab, i3.IonFabButton, i3.IonGrid, i3.IonHeader, i3.IonIcon, i3.IonImg, i3.IonMenuButton, i3.IonRow, i3.IonTitle, i3.IonToolbar]\n  });\n  return PicturePage;\n})();\nexport { PicturePage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}