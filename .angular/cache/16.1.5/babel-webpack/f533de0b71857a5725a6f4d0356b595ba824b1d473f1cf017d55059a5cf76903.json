{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/surveys.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction FormPage_div_7_ion_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-header\")(2, \"ion-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-card-content\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const survey_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(survey_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(survey_r5.birthday);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", survey_r5.description, \" \");\n  }\n}\nfunction FormPage_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormPage_div_7_ion_card_1_Template, 8, 3, \"ion-card\", 9);\n    i0.ɵɵelementStart(2, \"ion-infinite-scroll\");\n    i0.ɵɵelement(3, \"ion-infinite-scroll-content\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.surveysList);\n  }\n}\nfunction FormPage_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h3\");\n    i0.ɵɵtext(2, \"No surveys !\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" you not have registered survey. you can use the floating button below to add some. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormPage_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n    i0.ɵɵtext(3, \"Fill the form below\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(4, \"ion-content\", 12)(5, \"ion-item\")(6, \"ion-label\", 13);\n    i0.ɵɵtext(7, \"Enter a name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function FormPage_ng_template_14_Template_ion_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.surveyBeingCreated.name = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.surveyBeingCreated.name);\n  }\n}\nclass FormPage {\n  constructor(surveysService) {\n    this.surveysService = surveysService;\n    this.surveysList = [];\n    this.surveyBeingCreated = {\n      name: \"\",\n      birthday: \"\",\n      description: \"\"\n    };\n    this.isModalOpen = false;\n  }\n  ngOnInit() {\n    this.loadSurveys();\n  }\n  loadSurveys() {\n    this.surveysService.surveysList().then(list => {\n      this.surveysList = list;\n    });\n  }\n  showSurveyForm() {\n    this.surveyBeingCreated = {\n      name: \"\",\n      birthday: \"\",\n      description: \"\"\n    };\n    this.isModalOpen = true;\n  }\n  cancel() {\n    this.isModalOpen = false;\n  }\n  save() {\n    this.surveysService.saveSurvey(this.surveyBeingCreated);\n    this.loadSurveys();\n    this.isModalOpen = false;\n  }\n}\nFormPage.ɵfac = function FormPage_Factory(t) {\n  return new (t || FormPage)(i0.ɵɵdirectiveInject(i1.SurveysService));\n};\nFormPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormPage,\n  selectors: [[\"app-form\"]],\n  decls: 15,\n  vars: 5,\n  consts: [[3, \"translucent\"], [\"slot\", \"start\"], [3, \"fullscreen\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [\"slot\", \"fixed\", \"vertical\", \"bottom\", \"horizontal\", \"end\"], [3, \"click\"], [\"name\", \"add\"], [3, \"isOpen\"], [4, \"ngFor\", \"ngForOf\"], [\"loadingText\", \"plase wait...\", \"loadingSpinner\", \"bubbles\"], [1, \"ion-text-center\"], [1, \"ion-padding\"], [\"position\", \"stacked\"], [\"type\", \"text\", \"placeholder\", \"The  name\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function FormPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n      i0.ɵɵelement(3, \"ion-menu-button\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \"survey forms\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\", 2);\n      i0.ɵɵtemplate(7, FormPage_div_7_Template, 4, 1, \"div\", 3);\n      i0.ɵɵtemplate(8, FormPage_ng_template_8_Template, 4, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(10, \"ion-fab\", 5)(11, \"ion-fab-button\", 6);\n      i0.ɵɵlistener(\"click\", function FormPage_Template_ion_fab_button_click_11_listener() {\n        return ctx.showSurveyForm();\n      });\n      i0.ɵɵelement(12, \"ion-icon\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-modal\", 8);\n      i0.ɵɵtemplate(14, FormPage_ng_template_14_Template, 9, 1, \"ng-template\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(9);\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.surveysList.length !== 0)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"isOpen\", ctx.isModalOpen);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgControlStatus, i3.NgModel, i4.IonButtons, i4.IonCard, i4.IonCardContent, i4.IonCardHeader, i4.IonCardSubtitle, i4.IonCardTitle, i4.IonContent, i4.IonFab, i4.IonFabButton, i4.IonHeader, i4.IonIcon, i4.IonInfiniteScroll, i4.IonInfiniteScrollContent, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonMenuButton, i4.IonTitle, i4.IonToolbar, i4.IonModal, i4.TextValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FormPage };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","survey_r5","name","birthday","ɵɵtextInterpolate1","description","ɵɵtemplate","FormPage_div_7_ion_card_1_Template","ɵɵelement","ɵɵproperty","ctx_r0","surveysList","ɵɵlistener","FormPage_ng_template_14_Template_ion_input_ngModelChange_8_listener","$event","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","surveyBeingCreated","ctx_r3","FormPage","constructor","surveysService","isModalOpen","ngOnInit","loadSurveys","then","list","showSurveyForm","cancel","save","saveSurvey","ɵɵdirectiveInject","i1","SurveysService","selectors","decls","vars","consts","template","FormPage_Template","rf","ctx","FormPage_div_7_Template","FormPage_ng_template_8_Template","ɵɵtemplateRefExtractor","FormPage_Template_ion_fab_button_click_11_listener","FormPage_ng_template_14_Template","length","_r1"],"sources":["D:\\ionic\\survey-app\\src\\app\\pages\\form\\form.page.ts","D:\\ionic\\survey-app\\src\\app\\pages\\form\\form.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Survey } from 'src/app/models/survey';\nimport { SurveysService } from 'src/app/services/surveys.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.page.html',\n  styleUrls: ['./form.page.scss'],\n})\nexport class FormPage implements OnInit {\n  public surveysList : Survey[] = [];\n  public surveyBeingCreated : Survey = {\n    name: \"\",\n    birthday: \"\",\n    description: \"\"\n  };\n  public isModalOpen : boolean = false;\n\n  constructor(private surveysService : SurveysService) { }\n\n  ngOnInit() {\n    this.loadSurveys();\n  }\n  public loadSurveys(){\n    this.surveysService.surveysList().then(list=>{\n      this.surveysList = list;\n    })\n\n  }\n  public showSurveyForm() {\n    this.surveyBeingCreated = {\n      name: \"\",\n      birthday: \"\",\n      description: \"\"\n    };\n    this.isModalOpen = true;\n  }\n  public cancel() {\n    this.isModalOpen = false;\n  }\n  public save() {\n    this.surveysService.saveSurvey(this.surveyBeingCreated);\n    this.loadSurveys();\n    this.isModalOpen = false;\n  }\n\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>survey forms</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  \n  <div *ngIf=\"surveysList.length !== 0; else elseBlock\">\n     <ion-card *ngFor=\"let survey of surveysList; let index\">\n        <ion-card-header>\n          <ion-card-title>{{ survey.name }}</ion-card-title>\n          <ion-card-subtitle>{{ survey.birthday }}</ion-card-subtitle>\n        </ion-card-header>\n        <ion-card-content>\n          {{ survey.description }}\n        </ion-card-content>\n     </ion-card>\n     <ion-infinite-scroll>\n        <ion-infinite-scroll-content loadingText=\"plase wait...\" loadingSpinner=\"bubbles\"></ion-infinite-scroll-content>\n     </ion-infinite-scroll>\n\n  </div>\n  <ng-template #elseBlock>\n    <div class=\"ion-text-center\">\n      <h3>No surveys !</h3>\n      you not have registered survey. you can use the floating button below to add some.\n    </div>\n  </ng-template>\n  <ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"end\">\n    <ion-fab-button (click)=\"showSurveyForm()\">\n      <ion-icon name=\"add\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n  <ion-modal [isOpen]=\"isModalOpen\">\n    <ng-template>\n      <ion-header>\n        <ion-toolbar>\n          <ion-title>Fill the form below</ion-title>\n        </ion-toolbar>\n      </ion-header>\n      <ion-content class=\"ion-padding\">\n        <ion-item>\n          <ion-label position=\"stacked\">Enter a name</ion-label>\n        <ion-input type=\"text\" placeholder=\"The  name\" [(ngModel)]=\"surveyBeingCreated.name\"></ion-input>\n        </ion-item>\n      </ion-content>\n    </ng-template>\n  </ion-modal>\n \n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}