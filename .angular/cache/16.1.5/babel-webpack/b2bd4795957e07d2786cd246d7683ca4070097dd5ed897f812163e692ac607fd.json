{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./storage.service\";\nclass SurveysService {\n  constructor(storage) {\n    this.storage = storage;\n    this.surveys = [{\n      name: \"test\",\n      birthday: \"\",\n      description: \"\"\n    }];\n    this.init();\n  }\n  init() {\n    var _this$storage$get;\n    (_this$storage$get = this.storage.get(\"surveys\")) === null || _this$storage$get === void 0 ? void 0 : _this$storage$get.then(surveys => {\n      this.surveys = surveys;\n    });\n  }\n  saveSurvey(survey) {\n    this.surveys.push(survey);\n    this.storage.set(\"surveys\", this.surveys);\n  }\n  surveysList() {\n    return Promise.resolve(this.surveys);\n  }\n}\nSurveysService.ɵfac = function SurveysService_Factory(t) {\n  return new (t || SurveysService)(i0.ɵɵinject(i1.StorageService));\n};\nSurveysService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SurveysService,\n  factory: SurveysService.ɵfac,\n  providedIn: 'root'\n});\nexport { SurveysService };","map":{"version":3,"names":["SurveysService","constructor","storage","surveys","name","birthday","description","init","_this$storage$get","get","then","saveSurvey","survey","push","set","surveysList","Promise","resolve","i0","ɵɵinject","i1","StorageService","factory","ɵfac","providedIn"],"sources":["D:\\ionic\\survey-app\\src\\app\\services\\surveys.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\nimport { Survey } from '../models/survey';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveysService {\n  private surveys : Survey[] = [{name: \"test\",birthday:\"\",description: \"\"}];\n  constructor(private storage : StorageService) { \n    this.init();\n  }\n  init() {\n    this.storage.get(\"surveys\")?.then((surveys : Survey[])=>{\n      this.surveys = surveys;\n    })\n  }\n  public saveSurvey(survey: Survey){\n    this.surveys.push(survey);\n    this.storage.set(\"surveys\", this.surveys);\n\n  }\n  public surveysList() : Promise<Survey[]>{\n    return Promise.resolve(this.surveys);\n  }\n}\n"],"mappings":";;AAIA,MAGaA,cAAc;EAEzBC,YAAoBC,OAAwB;IAAxB,KAAAA,OAAO,GAAPA,OAAO;IADnB,KAAAC,OAAO,GAAc,CAAC;MAACC,IAAI,EAAE,MAAM;MAACC,QAAQ,EAAC,EAAE;MAACC,WAAW,EAAE;IAAE,CAAC,CAAC;IAEvE,IAAI,CAACC,IAAI,EAAE;EACb;EACAA,IAAIA,CAAA;IAAA,IAAAC,iBAAA;IACF,CAAAA,iBAAA,OAAI,CAACN,OAAO,CAACO,GAAG,CAAC,SAAS,CAAC,cAAAD,iBAAA,uBAA3BA,iBAAA,CAA6BE,IAAI,CAAEP,OAAkB,IAAG;MACtD,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EACOQ,UAAUA,CAACC,MAAc;IAC9B,IAAI,CAACT,OAAO,CAACU,IAAI,CAACD,MAAM,CAAC;IACzB,IAAI,CAACV,OAAO,CAACY,GAAG,CAAC,SAAS,EAAE,IAAI,CAACX,OAAO,CAAC;EAE3C;EACOY,WAAWA,CAAA;IAChB,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAACd,OAAO,CAAC;EACtC;;AAjBWH,cAAc,C;mBAAdA,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAdrB,cAAc,C;SAAdA,cAAc;EAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPxB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}